#admin
import logging
from typing import List

from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup

from database.models import SubscriptionCheck, AdUrl


def admin_panel_menu():
    buttons = [
        [
            KeyboardButton(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"),
            KeyboardButton(text="–û–ü"),
        ],
        [
            KeyboardButton(text='–†–µ–∫–ª–∞–º–Ω—ã–µ —Å—Å—ã–ª–∫–∏'),
            KeyboardButton(text='–†–∞—Å—Å—ã–ª–∫–∏')
        ],
        [
            KeyboardButton(text='–ö–ª—é—á–∏ –¥–ª—è –∞–ø–∏'),
            KeyboardButton(text='–Æ–∑–µ—Ä—ã –ë–¥')
        ],
        [
            KeyboardButton(text='–õ–æ–≥–∏')
        ],
        [
            KeyboardButton(text='–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ')
        ]
    ]
    keyboard = ReplyKeyboardMarkup(keyboard=buttons, resize_keyboard=True)
    return keyboard


def op_panel_button(subscription_list: List[SubscriptionCheck]):
    buttons = []
    for subscription in subscription_list:
        buttons.append([InlineKeyboardButton(text=subscription.chat_id, callback_data=f'op:view:{subscription.id}')])
    buttons.append([InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—É—é –ø–æ–¥–ø–∏—Å–∫—É', callback_data='create_op_panel')])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard




def op_url_one_bottom_panel(channel_id: int):
    buttons = [
        [
            InlineKeyboardButton(text='üîÑ –û–±–Ω–æ–≤–∏—Ç—å —Å—Å—ã–ª–∫—É', callback_data=f'op:update_link:{channel_id}'),
            InlineKeyboardButton(text='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data=f'op:delete:{channel_id}'),
        ],
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data=f'admin_panel_op')
        ],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard



def cancel_op_panel_button():
    buttons = [
        [
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='admin_panel_op')
        ],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def cancel_urls_panel_button():
    buttons = [
        [
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='back_urls_panel')
        ],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def ad_url_one_panel_button(name):
    buttons = [
        [
            InlineKeyboardButton(text='üîÑ –û–±–Ω–æ–≤–∏—Ç—å', callback_data=f'ad_url:update:{name}'),
            InlineKeyboardButton(text='üóëÔ∏è –£–¥–∞–ª–∏—Ç—å', callback_data=f'ad_url:delete:{name}'),
        ],
        [
            InlineKeyboardButton(text='–ù–∞–∑–∞–¥', callback_data='ad_url:back')
        ],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def cancel_key_panel_button():
    buttons = [
        [
            InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='back_keys_panel')
        ],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def ad_urls_panel_button(ad_url_list: List[AdUrl]):
    buttons = []
    for ad_url in ad_url_list:
        buttons.append([InlineKeyboardButton(text=ad_url.name, callback_data=f'ad_url:view:{ad_url.name}')])
    buttons.append([InlineKeyboardButton(text='–°–æ–∑–¥–∞—Ç—å —Ä–µ–∫–ª–∞–º–Ω—É—é —Å—Å—ã–ª–∫—É', callback_data='create_ad_url_panel')])
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard


def api_keys_panel_button():
    buttons = [
        [
            InlineKeyboardButton(text='ChatGPT', callback_data='key:set:chatgpt'),
            InlineKeyboardButton(text='ChatGPT o1', callback_data='key:set:claude_o1')
        ],
        [
            InlineKeyboardButton(text='Claude', callback_data='key:set:claude'),
            InlineKeyboardButton(text='ElevenLabs', callback_data='key:set:elevenlabs')
        ],
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)
    return keyboard



def start_message_menu_keyboard(is_set: bool) -> InlineKeyboardMarkup:
    """
    –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ä—Ç–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
    """
    buttons = []
    if is_set:
        buttons.extend([
            [InlineKeyboardButton(text="üîÑ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å/–ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Å—Ç", callback_data="admin:start_msg:set")],
            [InlineKeyboardButton(text="üïí –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É", callback_data="admin:start_msg:delay")],
            [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="admin:start_msg:delete")],
        ])
    else:
        buttons.append(
            [InlineKeyboardButton(text="‚ûï –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ—Å—Ç", callback_data="admin:start_msg:set")]
        )

    return InlineKeyboardMarkup(inline_keyboard=buttons)


def cancel_copy_message() -> InlineKeyboardMarkup:
    """
    –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã –¥–ª—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    """
    buttons = [
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="admin:start_msg:cancel")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)


def confirm_malling_keyboard() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text='–ù–∞—á–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É', callback_data='confirm_malling')],
            [InlineKeyboardButton(text='–û—Ç–º–µ–Ω–∞', callback_data='cancel_malling')]
        ]
    )


